# docker-compose file version
version: '3'

services:
  ### WEB
  web:
    env_file:
      - .env
    build:
      context: ./nginx
      dockerfile: Dockerfile-dev
      args:
        - VIRTUAL_HOST=${VIRTUAL_HOST}
        - PROJECT_NAME=${PROJECT_NAME}
        - NGINX_VERSION=${NGINX_VERSION}
    container_name: ${PROJECT_NAME}_web
    ports:
      - "80:8080"
      - "443:4433"
    volumes:
      - ./static:/static
    restart: always

  ### APPLICATION
  app:
    env_file:
      - .env
    build:
      context: .
      dockerfile: ./application/Dockerfile
      args:
        - APP_ENV=${APP_ENV}
        - DOCKER_USER=${DOCKER_USER}
        - PROJECT_NAME=${PROJECT_NAME}
        - PYTHON_VERSION=${PYTHON_VERSION}
    container_name: ${PROJECT_NAME}_app
    expose:
      - "1025"
      - "8000"
    volumes:
      - .:/${PROJECT_NAME}
    depends_on:
      - db
    restart: always

  ### DATABASE
  db:
    env_file:
      - .env
    build:
      context: ./postgres
      dockerfile: Dockerfile
      args:
        - POSTGRES_VERSION=${POSTGRES_VERSION}
    container_name: ${PROJECT_NAME}_db
    volumes:
      - ${POSTGRES_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
      - data:/var/lib/postgresql/data
    restart: always

  ### MAILHOG
  mailhog:
      build: ./mailhog
      ports:
        - "1025:1025"
        - "8025:8025"

volumes:
  data:
    driver: "local"
